{"version":3,"sources":["assets/beer.svg","assets/sad.svg","assets/depardieu.jpeg","assets/virus.png","lib/getAnswer.js","components/EasterEgg/EasterEgg.js","components/AnswerPicto/AnswerPicto.js","components/AnswerText/AnswerText.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","dayName","DAYS_WITH_POT","concat","getAnswer","date","Date","dayNumber","getDay","hour","getHours","includes","EasterEgg","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","src","depardieu","alt","Component","AnswerPicto","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","state","isEasterEgg","toggleImage","setState","console","warn","answer","onClick","EasterEgg_EasterEgg","beer","sad","className","AnswerText","App","window","location","replace","AnswerPicto_AnswerPicto","AnswerText_AnswerText","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gOCalCC,SAAU,CAbM,SACA,SACC,UACE,YACD,WACF,SACE,aAiBlBC,EAAa,GAAAC,OAAOF,GAEbG,EAAY,WACvB,IAAMC,EAAO,IAAIC,KACXC,EAAYF,EAAKG,SACjBC,EAAOJ,EAAKK,WAElB,OAAIR,EAAcS,SAASV,EAAQM,IAC7BE,GAAQ,IAAMA,EAAO,GArBA,SAuBdA,GAAQ,IAAMA,EAAO,GAzBV,MA2BXA,GAAQ,GAxBY,eAFV,4DCNZG,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEI,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,IAAKC,IAAWC,IAAI,wCAJjClB,EAAA,CAA+BmB,aCGlBC,EAAb,SAAAnB,GAAA,SAAAmB,IAAA,IAAAC,EAAAC,EAAApB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,GAAA,QAAAG,EAAAf,UAAAgB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAnB,UAAAmB,GAAA,OAAAL,EAAApB,OAAAG,EAAA,EAAAH,CAAAE,MAAAiB,EAAAnB,OAAAI,EAAA,EAAAJ,CAAAkB,IAAAQ,KAAArB,MAAAc,EAAA,CAAAjB,MAAAb,OAAAkC,MACEI,MAAQ,CACNC,aAAa,GAFjBR,EAKES,YAAc,WACZT,EAAKU,SAAS,SAAAH,GAAK,MAAK,CACtBC,aAAcD,EAAMC,eAEtBG,QAAQC,KAAK,WATjBZ,EAAA,OAAApB,OAAAO,EAAA,EAAAP,CAAAkB,EAAAnB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAkB,EAAA,EAAAT,IAAA,SAAAC,MAAA,WAaI,IAAMuB,EAAS3C,IACf,OACEqB,EAAAC,EAAAC,cAAA,OAAKqB,QAAShC,KAAK2B,aAChB3B,KAAKyB,MAAMC,YACVjB,EAAAC,EAAAC,cAACsB,EAAD,MAEAxB,EAAAC,EAAAC,cAAA,OACEC,IFlBc,QEmBZmB,EAAwBG,IFlBb,OEkBoBH,EAAuBI,IAAMD,IAE9DE,UAAS,YAAAjD,OFrBK,QEqBS4C,EAAwB,SAAW,IAC1DjB,IAAI,cAxBhBE,EAAA,CAAiCD,aCHpBsB,EAAb,SAAAxC,GAAA,SAAAwC,IAAA,OAAAvC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,GAAAvC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuC,GAAAlC,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAuC,EAAAxC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAuC,EAAA,EAAA9B,IAAA,SAAAC,MAAA,WAEI,IAAMuB,EAAS3C,IACf,OACEqB,EAAAC,EAAAC,cAAA,SHCoB,QGAjBoB,EACG,kBHAa,OGCbA,EACA,MACA,kBATZM,EAAA,CAAgCtB,aCqCjBuB,qMJ7BoB,iBIGzBlD,KACFmD,OAAOC,SAASC,QACd,qSAON,OACEhC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACb3B,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,cAChB3B,EAAAC,EAAAC,cAAC+B,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAD,OArBO,WACC5B,cCKE6B,QACW,cAA7BL,OAAOC,SAASK,UAEe,UAA7BN,OAAOC,SAASK,UAEhBN,OAAOC,SAASK,SAASC,MACvB,2DCZNC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3f88d17d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beer.99354d08.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad.5358081a.svg\";","module.exports = __webpack_public_path__ + \"static/media/depardieu.70266fc4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/virus.fe759d5f.png\";","export const SUNDAY = \"SUNDAY\";\nexport const MONDAY = \"MONDAY\";\nexport const TUESDAY = \"TUESDAY\";\nexport const WEDNESDAY = \"WEDNESDAY\";\nexport const THURSDAY = \"THURSDAY\";\nexport const FRIDAY = \"FRIDAY\";\nexport const SATURDAY = \"SATURDAY\";\n\nexport const ANSWER_YES = \"YES\";\nexport const ANSWER_NO = \"NO\";\nexport const ANSWER_ALMOST = \"ALMOST\";\nexport const ANSWER_YOU_ARE_LATE = \"YOU_ARE_LATE\";\n\nconst dayName = [\n  SUNDAY,\n  MONDAY,\n  TUESDAY,\n  WEDNESDAY,\n  THURSDAY,\n  FRIDAY,\n  SATURDAY,\n];\n\nconst DAYS_WITH_POT = [...dayName];\n\nexport const getAnswer = () => {\n  const date = new Date();\n  const dayNumber = date.getDay();\n  const hour = date.getHours();\n\n  if (DAYS_WITH_POT.includes(dayName[dayNumber])) {\n    if (hour >= 16 && hour < 18) {\n      return ANSWER_ALMOST;\n    } else if (hour >= 18 && hour < 20) {\n      return ANSWER_YES;\n    } else if (hour >= 20) {\n      return ANSWER_YOU_ARE_LATE;\n    } else {\n      return ANSWER_NO;\n    }\n  } else {\n    return ANSWER_NO;\n  }\n};\n","import React, { Component } from \"react\";\nimport depardieu from \"../../assets/depardieu.jpeg\";\n\nexport class EasterEgg extends Component {\n  render() {\n    return (\n      <div>\n        <img src={depardieu} alt=\"easter off of gerard depardieu\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport beer from \"../../assets/beer.svg\";\nimport sad from \"../../assets/sad.svg\";\nimport { getAnswer, ANSWER_YES, ANSWER_NO } from \"../../lib/getAnswer\";\nimport { EasterEgg } from \"../EasterEgg\";\n\nexport class AnswerPicto extends Component {\n  state = {\n    isEasterEgg: false\n  };\n\n  toggleImage = () => {\n    this.setState(state => ({\n      isEasterEgg: !state.isEasterEgg\n    }));\n    console.warn(\"toggle\");\n  };\n\n  render() {\n    const answer = getAnswer();\n    return (\n      <div onClick={this.toggleImage}>\n        {this.state.isEasterEgg ? (\n          <EasterEgg />\n        ) : (\n          <img\n            src={\n              answer === ANSWER_YES ? beer : answer === ANSWER_NO ? sad : beer\n            }\n            className={`App-logo ${answer === ANSWER_YES ? \"Wiggle\" : \"\"}`}\n            alt=\"logo\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getAnswer, ANSWER_YES, ANSWER_NO } from \"../../lib/getAnswer\";\n\nexport class AnswerText extends Component {\n  render() {\n    const answer = getAnswer();\n    return (\n      <p>\n        {answer === ANSWER_YES\n          ? \"Oui bien s√ªr\"\n          : answer === ANSWER_NO\n          ? \"NON\"\n          : \"Presque...\"}\n      </p>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { getAnswer, ANSWER_YOU_ARE_LATE } from \"./lib/getAnswer\";\nimport { AnswerPicto, AnswerText } from \"./components\";\nimport virus from \"./assets/virus.png\";\n\nconst LOCKDOWN = false;\nclass App extends Component {\n  componentDidMount() {\n    if (LOCKDOWN) {\n      // setTimeout(() => {\n      //   window.location.replace(\"https://discord.gg/hAGA8Fp\");\n      // }, 1000);\n    } else {\n      if (getAnswer() === ANSWER_YOU_ARE_LATE) {\n        window.location.replace(\n          \"https://www.google.com/maps/place/C'D%C3%A9Cal%C3%A9/@48.8844574,2.3174386,17z/data=!4m12!1m6!3m5!1s0x47e66fb23363c55b:0xe401d4ced0cb52b9!2zQydEw6lDYWzDqQ!8m2!3d48.8844574!4d2.3196273!3m4!1s0x47e66fb23363c55b:0xe401d4ced0cb52b9!8m2!3d48.8844574!4d2.3196273\"\n        );\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <AnswerPicto />\n          <AnswerText />\n          {LOCKDOWN && (\n            <img\n              src={virus}\n              style={{ position: \"absolute\", width: \"70%\", opacity: 0.95 }}\n            />\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}